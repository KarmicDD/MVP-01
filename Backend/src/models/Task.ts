import mongoose, { Schema, Document } from 'mongoose';

export interface Task extends Document {
    userId: string;
    title: string;
    description?: string;
    dueDate: Date;
    priority: 'high' | 'medium' | 'low';
    completed: boolean;
    aiVerified: boolean;
    isAIGenerated: boolean; // New field to track if task was generated by AI
    verificationMessage?: string;
    lastVerifiedAt?: Date;
    category: 'profile' | 'document' | 'financial' | 'match' | 'other';
    createdAt: Date;
    updatedAt: Date;
}

const TaskSchema: Schema = new Schema({
    userId: {
        type: String,
        required: true,
        index: true
    },
    title: {
        type: String,
        required: true
    },
    description: {
        type: String
    },
    dueDate: {
        type: Date,
        required: true
    },
    priority: {
        type: String,
        enum: ['high', 'medium', 'low'],
        default: 'medium'
    },
    completed: {
        type: Boolean,
        default: false
    },
    aiVerified: {
        type: Boolean,
        default: false
    },
    isAIGenerated: {
        type: Boolean,
        default: false
    },
    verificationMessage: {
        type: String
    },
    lastVerifiedAt: {
        type: Date
    },
    category: {
        type: String,
        enum: ['profile', 'document', 'financial', 'match', 'other'],
        default: 'other'
    },
    createdAt: {
        type: Date,
        default: Date.now
    },
    updatedAt: {
        type: Date,
        default: Date.now
    }
}, {
    timestamps: true
});

const TaskModel = mongoose.model<Task>('Task', TaskSchema);
export default TaskModel;
